version: '3'

volumes:
  postgres_volume:
  redis_volume:
  prometheus_data:
  grafana_data:
  runner_playbooks:

services:
  solution:
    environment:
      - CONFIG_PATH=.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
      - "8080:8080"
      - "2112:2112"
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      - pg

  pg:
    image: postgres:14-alpine3.17
    env_file:
      - backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  migrator:
    build:
      context: ./backend
      dockerfile: migration.Dockerfile
    restart: on-failure
    environment:
      DB_HOST: pg
    depends_on:
      - pg

  runner:
    build:
      dockerfile: ./runner/Dockerfile
      context: ./
    env_file:
      - runner/.env
    volumes:
      - runner_playbooks:/app/playbooks
    depends_on:
      - solution
      - redis

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    volumes: 
      - redis_volume:/data
    env_file:
      - runner/.env

  prometheus:
    image: prom/prometheus:v2.37.9
    ports:
      - "9090:9090"
    volumes:
      - ./backend/prometheus.yaml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:1.48
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp" # jaeger-client
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # web
      - "14268:14268"
      - "9411:9411"
